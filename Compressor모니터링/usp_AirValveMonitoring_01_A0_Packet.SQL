DELIMITER //

CREATE PROCEDURE usp_AirValveMonitoring_01_A0_Packet(
	  IN V_COMP_ID VARCHAR(20)
	, IN V_VALVE_STATE VARCHAR(20)
	, IN V_HW_VERSION VARCHAR(20)
	, IN V_SW_VERSION VARCHAR(20)
	, IN V_AIR_PRESSURE VARCHAR(20)
	, IN V_CONTROL_STATE VARCHAR(20)
	, IN V_SAVE_TIME_STR VARCHAR(20)
	, OUT V_RESULT INT
)
	LANGUAGE SQL
	NOT DETERMINISTIC
	CONTAINS SQL
	SQL SECURITY DEFINER
	COMMENT '에어벨브 상태를 저장하는 프로시져'
Begin
/*
@description

-- 1-A0번 패킷을 받아서, COMP정보에 조회하고
-- 있다면 TBM_COMP_STATUS 테이블에 저장하고, 이력을 TBP_COMP_STATUS 테이블에 저장
@param
@return : 정보가 있다면 1, 없다면 0 , Error : -1
*/
DECLARE recordCnt INT DEFAULT 0;
DECLARE lastSaveTimeStr VARCHAR(20) DEFAULT '';
DECLARE lastControlState VARCHAR(20) DEFAULT '';
DECLARE changeDay INT DEFAULT 0;
DECLARE changeMonth INT DEFAULT 0;
DECLARE runTimeMin INT DEFAULT 0;
DECLARE totOperHour INT DEFAULT 0;
DECLARE motorOperHour INT DEFAULT 0;
DECLARE loadOperHour INT DEFAULT 0;

DECLARE exit handler for SQLEXCEPTION
BEGIN
	GET DIAGNOSTICS CONDITION 1 @p2 = MESSAGE_TEXT;
	SELECT @p2 as Result;
	
	ROLLBACK;
	SET V_RESULT = -1;
END;

SELECT 
	Count(*) INTO recordCnt
FROM TBM_COMPRESSOR
WHERE COMP_ID = V_COMP_ID AND REGIST_YN = 'Y';

-- 해당하는 값이 없다면 RETURN
IF recordCnt < 1 THEN
	SET V_RESULT = 0;
ELSE
BEGIN

	-- 총운전시간 : TOT_OPER_HOUR
	-- 월간운전시간 : MOTOR_OPER_HOUR
	-- 일간운전시간 : LOAD_OPER_HOUR
	-- CONTROL_STATE : On(1) / Off(0)
	-- VALVE_STATE   : % 값.
	
	-- 체크 추가 ZigBee 단말에서 전원끄짐에서 0,0,0을 전송하는데, 이 값을 건너뀌도록 한다.
	IF V_VALVE_STATE = '0' AND V_AIR_PRESSURE = '0' AND  V_CONTROL_STATE = '0' THEN
		SET V_RESULT = 1;
	ELSE
	BEGIN
		IF NOT EXISTS (SELECT * FROM TBM_COMP_STATUS WHERE COMP_ID = V_COMP_ID) THEN
				INSERT INTO TBM_COMP_STATUS(COMP_ID, SAVE_TIME_STR, CREATE_TIME, UPDATE_TIME,VALVE_STATE,HW_VERSION,SW_VERSION,AIR_PRESSURE,CONTROL_STATE,TOT_OPER_HOUR,MOTOR_OPER_HOUR,LOAD_OPER_HOUR) SELECT V_COMP_ID, V_SAVE_TIME_STR, getSaveTimeStr(),getSaveTimeStr(), V_VALVE_STATE, V_HW_VERSION, V_SW_VERSION, V_AIR_PRESSURE, V_CONTROL_STATE , '0','0','0' FROM DUAL;
			ELSE
			BEGIN
			
				SELECT CONTROL_STATE, SAVE_TIME_STR, CAST(TOT_OPER_HOUR as INT), CAST(MOTOR_OPER_HOUR as INT), CAST(LOAD_OPER_HOUR as INT) INTO lastControlState, lastSaveTimeStr,totOperHour,motorOperHour,loadOperHour FROM TBM_COMP_STATUS WHERE COMP_ID = V_COMP_ID;
				
				-- 이전상태가 정지 상태이고 , 최신 상태가 정지 상태 일때는 시간을 업데이트 하지 않는다.
				IF lastControlState = '1' THEN  -- 이전에 ON에서 정보가 올라오면, 시간  UPdate
				BEGIN
					SELECT TIMESTAMPDIFF(MINUTE, STR_TO_DATE(lastSaveTimeStr,'%Y%m%d%H%i%s'),STR_TO_DATE(V_SAVE_TIME_STR,'%Y%m%d%H%i%s')) INTO runTimeMin;
					SET totOperHour = totOperHour + runTimeMin;
					-- 월이 변경되었다면
					IF LEFT(V_SAVE_TIME_STR,6) != LEFT(lastSaveTimeStr,6) THEN -- 월이 변경되었다면
					BEGIN
						SELECT TIMESTAMPDIFF(MINUTE, STR_TO_DATE(CONCAT(LEFT(V_SAVE_TIME_STR,6),'01000000'),'%Y%m%d%H%i%s'),STR_TO_DATE(V_SAVE_TIME_STR,'%Y%m%d%H%i%s')) INTO runTimeMin;
						SET motorOperHour = runTimeMin;
						-- 일자는 당연히 변경되므로
						SELECT TIMESTAMPDIFF(MINUTE, STR_TO_DATE(CONCAT(LEFT(V_SAVE_TIME_STR,8),'000000'),'%Y%m%d%H%i%s'),STR_TO_DATE(V_SAVE_TIME_STR,'%Y%m%d%H%i%s')) INTO runTimeMin;
						SET loadOperHour = runTimeMin;
					END;
					ELSE
						BEGIN
							SET motorOperHour = motorOperHour + runTimeMin;
							IF LEFT(V_SAVE_TIME_STR,8) != LEFT(lastSaveTimeStr,8) THEN -- 일자가 변경되었다면
							BEGIN
								SELECT TIMESTAMPDIFF(MINUTE, STR_TO_DATE(CONCAT(LEFT(V_SAVE_TIME_STR,8),'000000'),'%Y%m%d%H%i%s'),STR_TO_DATE(V_SAVE_TIME_STR,'%Y%m%d%H%i%s')) INTO runTimeMin;
								SET loadOperHour = runTimeMin;
							END;
							ELSE
							BEGIN
								SET loadOperHour = loadOperHour + runTimeMin;
							END;
							END IF;
						END;
					END IF;
				END;
				ELSE  -- 이전상태가 1 이고..
				BEGIN
					IF V_CONTROL_STATE = '1' THEN -- 시간값 초기화
					BEGIN
						SELECT TIMESTAMPDIFF(MINUTE, STR_TO_DATE(lastSaveTimeStr,'%Y%m%d%H%i%s'),STR_TO_DATE(V_SAVE_TIME_STR,'%Y%m%d%H%i%s')) INTO runTimeMin;
						-- SET totOperHour = totOperHour + runTimeMin;
						-- 월이 변경되었다면
						IF LEFT(V_SAVE_TIME_STR,6) != LEFT(lastSaveTimeStr,6) THEN -- 월이 변경되었다면
						BEGIN
							SET motorOperHour = 0;
							-- 일자는 당연히 변경되므로
							SET loadOperHour = 0;
						END;
						ELSE
							BEGIN
								IF LEFT(V_SAVE_TIME_STR,8) != LEFT(lastSaveTimeStr,8) THEN -- 일자가 변경되었다면
								BEGIN
									SET loadOperHour = 0;
								END;
								END IF;
							END;
						END IF;
					END;
					END IF;
				END;
				END IF;		
				
				UPDATE TBM_COMP_STATUS
				SET
					VALVE_STATE = V_VALVE_STATE
					,HW_VERSION = V_HW_VERSION
					,SW_VERSION = V_SW_VERSION
					,AIR_PRESSURE = V_AIR_PRESSURE
					,CONTROL_STATE = V_CONTROL_STATE
					,SAVE_TIME_STR = V_SAVE_TIME_STR
					,TOT_OPER_HOUR = CONCAT(totOperHour)
					,MOTOR_OPER_HOUR = CONCAT(motorOperHour)
					,LOAD_OPER_HOUR = CONCAT(loadOperHour) 		
					,UPDATE_TIME = getSaveTimeStr()
				WHERE COMP_ID = V_COMP_ID;
			END;
			END IF;
		
			IF NOT EXISTS (SELECT * FROM TBP_COMP_STATUS WHERE COMP_ID = V_COMP_ID AND SAVE_TIME_STR = V_SAVE_TIME_STR) THEN
				INSERT INTO TBP_COMP_STATUS(COMP_ID, SAVE_TIME_STR, DISCHARGE_TEMPER, DISCHARGE_PRESS, OUT_TEMPER, OILSKIMMER_PRESS, OILSKIMMER_TEMPER, OILSKIMMER_DIFF_PRESS, TOT_OPER_HOUR,MOTOR_OPER_HOUR, MOTOR_OPER_CNT, LOAD_OPER_HOUR, LOAD_OPER_CNT, INVERTER_CNTL_OUTPUT, DISCHARGE_PRESS_TRANS, DISCHARGE_TEMPER_TRANS, ALARM_1, ALARM_2, ALARM_3, CREATE_TIME, UPDATE_TIME,VALVE_STATE,HW_VERSION,SW_VERSION,AIR_PRESSURE,CONTROL_STATE)
				SELECT COMP_ID, SAVE_TIME_STR, DISCHARGE_TEMPER, DISCHARGE_PRESS, OUT_TEMPER, OILSKIMMER_PRESS, OILSKIMMER_TEMPER, OILSKIMMER_DIFF_PRESS, TOT_OPER_HOUR,MOTOR_OPER_HOUR, MOTOR_OPER_CNT, LOAD_OPER_HOUR, LOAD_OPER_CNT, INVERTER_CNTL_OUTPUT, DISCHARGE_PRESS_TRANS, DISCHARGE_TEMPER_TRANS, ALARM_1, ALARM_2, ALARM_3, CREATE_TIME, UPDATE_TIME, VALVE_STATE,HW_VERSION,SW_VERSION,AIR_PRESSURE,CONTROL_STATE
				FROM TBM_COMP_STATUS WHERE COMP_ID = V_COMP_ID;
			END IF;
		
			SET V_RESULT = 1;	
	END;
	END IF;
	
END;	
END IF;

COMMIT;

END//

Delimeter ;