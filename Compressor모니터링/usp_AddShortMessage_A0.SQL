DELIMITER //

CREATE or REPLACE PROCEDURE usp_AddShortMessage_A0(
     IN V_COMP_ID VARCHAR(20)
   , IN V_VALVE_STATE VARCHAR(20)
   , IN V_HW_VERSION VARCHAR(20)
   , IN V_SW_VERSION VARCHAR(20)
   , IN V_AIR_PRESSURE VARCHAR(20)
   , IN V_CONTROL_STATE VARCHAR(20)
   , IN V_CREATER VARCHAR(20)
   , IN V_SENDER VARCHAR(20)
   , OUT V_RESULT INT
)
	LANGUAGE SQL
	NOT DETERMINISTIC
	CONTAINS SQL
	SQL SECURITY DEFINER
	COMMENT '에버벨브 모니터링의 제어 메시지 생성'
Begin
/*
@description

-- 에어벨브 제어를 위한 SMS 메시지 생성
@param
@return : 정보가 있다면 1, 없다면 0 , Error : -1
*/
DECLARE recordCnt INT DEFAULT 0;
DECLARE sendMessage VARCHAR(200) DEFAULT '';


DECLARE exit handler for SQLEXCEPTION
BEGIN
	GET DIAGNOSTICS CONDITION 1 @p2 = MESSAGE_TEXT;
	SELECT @p2 as Result;
	
	ROLLBACK;
	SET V_RESULT = -1;
END;

SELECT 
	Count(*) INTO recordCnt
FROM TBM_COMPRESSOR
WHERE COMP_ID = V_COMP_ID AND REGIST_YN = 'Y';

-- 해당하는 값이 없다면 RETURN
IF recordCnt < 1 THEN
	SET V_RESULT = 0;
ELSE
BEGIN
	-- Make Send Message
	SELECT CONCAT('S,2,', A.COMP_ID , ',A0,' , IFNULL(V_VALVE_STATE,B.VALVE_STATE) ,',', IFNULL(V_HW_VERSION,B.HW_VERSION),',', IFNULL(V_SW_VERSION,B.SW_VERSION),',', IFNULL(V_AIR_PRESSURE,B.AIR_PRESSURE),',', IFNULL(V_CONTROL_STATE,B.CONTROL_STATE),',E')
	INTO sendMessage
	FROM TBM_COMPRESSOR A, TBM_COMP_STATUS B 
	WHERE A.COMP_ID = B.COMP_ID AND A.COMP_ID = V_COMP_ID;
	
	INSERT INTO TBM_SHORTMESSAGE(MOBILE_PHONE_NO, COMP_ID, SEND_MESSAGE,CREATE_TIME,SEND_CNT,CREATER,SENDER)
	SELECT 
		A.MOBILE_PHONE_NO
		, A.COMP_ID
		, IFNULL(sendMessage,'1')
		, DATE_FORMAT(NOW(),'%Y%m%d%H%i%s') 
		, 0
		, IFNULL(V_CREATER,'SYSTEM')
		, IFNULL(V_SENDER,A.MOBILE_PHONE_NO)
	FROM TBM_COMPRESSOR A, TBM_COMP_STATUS B 
	WHERE A.COMP_ID = B.COMP_ID AND A.COMP_ID = V_COMP_ID;

	SET V_RESULT = 1;
END;	
END IF;

COMMIT;
END
//

DELIMITER ;
